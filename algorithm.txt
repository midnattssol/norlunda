

Norlunda Algorithm


Updated 2023.02.26


When we’ve settled on a Proto-Germanic word that will serve as the basis for a new word in Norlunda, we apply a system of sound changes as described here to create that new word. Because this algorithm is designed to simulate 2,000 years of incremental change, it is important to follow each step in order.
Phase 1: Vowel Weakening
Overlong vowels become long, nasalized vowels de-nasalize, and weak words (articles, conjunctions, prepositions) drop terminal vowels.

Example: *andi (and) becomes and; witją becomes witja.
Phase 2: A Umlaut
Lowers a high vowel (i or u) when the following syllable’s vowel contains an initial non-high vowel (a, o, or æ).
i becomes e
u becomes o
ai becomes ǣ
au becomes ō
eu becomes ā (technically /ɔː/ but considered allophonic with /aː/)
iu becomes eo

Example: fullaz becomes follaz.
Phase 3: I Umlaut
Raises a vowel when the following syllable’s vowel contains an initial i, ɪ, or j.
a becomes e
e becomes i

Example: habjana becomes hebjana.
Phase 4: Infinitive Merger
All infinitive suffixes become -an.

Example: hebjana becomes heban. It may sometimes be necessary to look at descendant words to determine how much of the word is made up of the infinitive suffix.
Phase 5: Stem Merger
All terminal vowels (including -ja after stop consonants) are dropped. The suffixes -az, -iz, and -uz are dropped if they constitute their own syllable, as well as -s if it is being used as a grammatical marker. It may be necessary to look at descendant words to determine whether to treat -s as grammatical. Any remaining terminal approximates (j, l, r, w, and wj) become respectively i, al, or, u, and u. If a resulting u follows a vowel, it is absorbed such that…
æw becomes ā
ew becomes ē

Example: þonraz becomes þonor; frawjō becomes frawj > frau.
Phase 6: R Umlaut
Changes all instances of z (as well as terminal -s after a vowel) into r and centralizes preceding vowels.
æ becomes e
i becomes e
au becomes o

Example: bezi becomes beri.
Phase 7: Syllable Reduction
When w occurs between vowels, the cluster merges into a single, back vowel. The middle vowel in a three syllable word is also dropped, or the second-syllable vowel in a two-syllable word if it is a high or front vowel (æ, e, i, u). If the vowel is preceded by h, the h is dropped as well.
awe becomes ā
ewe becomes ō
ewo becomes ō
ewu becomes ū
gs and ks merge into ks (i.e. x)

Example: nēwēr becomes nōr.
Phase 8: Consonant Shortening
Shortens all long consonants and lowers a preceding high or front vowel.
e becomes æ
u becomes o

Example: will become wæl.
Phase 9: Fricative Shift
Some sounds become fricatives and some fricatives are lost.
b after a vowel becomes v
b after a consonant becomes f
h following a vowel or approximate, and not preceding a consonant lengthens a preceding short vowel and the h is dropped
h following a vowel before a consonant becomes k
þ becomes d
sk becomes sh before a vowel and after a stop consonant
t following an approximate becomes ts (i.e. z)
initial w before a consonant is dropped
w any other case becomes v
initial h before a consonant is dropped and the following vowel is raised
e becomes i
o becomes u

Example: lēb becomes lēv; þonor becomes donor.
Phase 10: Vowel Shelving
Merges some diphthongs and expands vowel inventory while removing the semantic difference between some short and long consonants.
ā becomes /ɑɪ/
æ becomes /eː/ when preceding r
ǣ becomes /æ/ or /ɑɪ/ when terminal
ai becomes /ɛ/ when preceding r
au becomes /oː/
e becomes /ɛ/
ē becomes /eː/
i becomes /ɪ/
ī becomes /iː/
semantic difference is lost between o and ō
u becomes /ʊ/
ū becomes /uː/
eo becomes /ɑu/
iu becomes /eː/

Example: hær becomes hēr.

Now that we know how these words should sound, we can apply Norlunda spelling rules as described in the Charter. Following are two examples of how words might evolve with this algorithm applied:
Hauzijaną “to hear”
Infinitive Merger: hauzan
R Umlaut: horan
Vowel Shelving: /hoɾɑn/ = /hoːɾɑn/
Result: horan
Hangistaz “stallion”
I Umlaut: hengistaz
Stem Merger: hengist
Syllable Reduction: henkst
Result: henxt
